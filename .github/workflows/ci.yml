name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  check-poetry:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: make check

  check-linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: poetry install
      - name: Run linting
        run: make lint

  check-typing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: poetry install
      - name: Run typing
        run: make typing

  check-formatting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: poetry install
      - name: Run formatting check
        run: make format-check

  check-envvars:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install gettext-base
        run: sudo apt-get install -y gettext-base
      - name: Install dependencies
        run: poetry install
      - name: Run envvars check
        run: make envvars
      - name: Check for changes
        run: git diff --exit-code

  test-back:
    runs-on: ubuntu-latest
    needs: [check-poetry, check-linting, check-typing, check-formatting, check-envvars]
    services:
      docker:
        image: docker:dind
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install make
        run: sudo apt-get install -y make
      - name: Run tests
        run: make tests
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: reports/tests/*
      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: reports/coverage/coverage_report.xml
